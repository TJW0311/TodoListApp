@{
    string nameArrow = ViewBag.SortBy == "Name"
        ? (ViewBag.SortDir == "asc" ? "↑" : "↓")
        : "";

    string dueArrow = ViewBag.SortBy == "DueDate"
        ? (ViewBag.SortDir == "asc" ? "↑" : "↓")
        : "";

    string nextNameDir = ViewBag.SortBy == "Name" && ViewBag.SortDir == "asc" ? "desc" : "asc";
    string nextDueDir = ViewBag.SortBy == "DueDate" && ViewBag.SortDir == "asc" ? "desc" : "asc";
}

@model IEnumerable<TodoList>
    <div class=" row">
        <div class ="col-md-2">
            <form asp-action="Filter" method = "post">
                <div class="mb-3">
                    <label class="form-label">Category:</label>
                    <select name="filter" class="form-select" asp-items="@(new SelectList(ViewBag.Categories,"CategoryId","Name",ViewBag.Filters.CategoryId))">
                    <option value="0">All</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Due:</label>
                <select name="filter" class="form-select" asp-items="@(new SelectList(ViewBag.DueFilters,"Key","Value",ViewBag.Filters.Due))">
                        <option value = "all">All</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label">Status:</label>
                <select name="filter" class="form-select" asp-items="@(new SelectList(ViewBag.Status,"StatusId","Name",ViewBag.Filters.StatusId))">
                        <option value = "0">All</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Filter</button>
                <a asp-action="Index" asp-route-id="" class="btn btn-primary">Clear</a>
            </form>
        </div>
        <div class ="col-md-10">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <form asp-action="Index" method="get" class="d-flex align-items-center gap-2 mb-3">
                <label for="searchType" class="form-label mb-0">Search by:</label>

                <select id="searchType" name="searchType" class="form-select w-auto">
                    <option value="name" selected="@(ViewBag.SearchType == "name")">Name</option>
                    <option value="start" selected="@(ViewBag.SearchType == "start")">Start Date</option>
                    <option value="end" selected="@(ViewBag.SearchType == "end")">End Date</option>
                </select>

                <input id="searchValue" name="searchValue"
                       type="text"
                       class="form-control w-auto"
                       placeholder="Enter value"
                       value="@ViewBag.SearchValue" />

                @if (!string.IsNullOrEmpty(ViewBag.SearchType) && !string.IsNullOrEmpty(ViewBag.SearchValue))
                {
                    <a asp-action="Index"
                       class="btn p-0 border-0 bg-transparent"
                       style="box-shadow: none;"
                       title="Clear Search">
                        <i class="fas fa-times" style="color: #7d2ae8; font-size: 1.2rem;"></i>
                    </a>
                }
                else
                {
                    <button type="submit" class="btn btn-primary" title="Search">
                        <i class="fas fa-search"></i> Search
                    </button>
                }
            </form>

            <!-- Add New Task Button -->
            <a asp-action="Add" class="btn btn-primary ms-2">Add New Task</a>
        </div>
        
            <table class="table table-bordered table-striped mt-2">
                <thead>
                    <tr>
                        <th>
                            <div class="d-flex justify-content-between align-items-center">
                                Name
                                <a asp-action="Index" asp-route-sortBy="Name" asp-route-sortDir="@nextNameDir" class="sort-link text-decoration-none">
                                    <i class="fas fa-sort"></i> @nameArrow
                                </a>
                            </div>
                        </th>
                        <th class="fixed-desc w-25">Description</th>
                        <th>Category</th>
                        <th>Start Date</th>
                        <th>
                            <div class="d-flex justify-content-between align-items-center">
                                Due Date
                                <a asp-action="Index" asp-route-sortBy="DueDate" asp-route-sortDir="@nextDueDir" class="sort-link text-decoration-none">
                                    <i class="fas fa-sort"></i> @dueArrow
                                </a>
                            </div>
                        </th>
                        <th>Status</th>
                        <th class="w-25">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(TodoList task in Model)
                    {
                        string overdue = task.Overdue? "bg-warning":"";
                        <tr>
                            <td>@task.Name</td>
                            <td class="fixed-desc w-25">@task.Description</td>
                            <td>@task.Category.Name</td>
                            <td>@task.StartDate?.ToShortDateString()</td>
                            <td class="@overdue">@task.DueDate?.ToShortDateString()</td>
                            <td>@task.Status.Name</td>
                            <td>
                                <div class="d-flex gap-2">
                                    @if (task.StatusId == 1)
                                    {
                                        <form asp-action="CompleteTask" methood="post" asp-route-id="@ViewBag.Filters.FilterString">
                                            <button type="submit" class="btn btn-success btn-sm"
                                                    name="todoListId" value="@task.Id" title="Mark as Completed">
                                                <i class="fas fa-check-circle"></i>
                                            </button>
                                        </form>
                                    }
                                    <button type="button" class="btn btn-warning btn-sm edit-btn"
                                            data-id="@task.Id"
                                            data-name="@task.Name"
                                            data-description="@task.Description"
                                            data-category="@task.CategoryId"
                                            data-start="@task.StartDate?.ToString("yyyy-MM-dd")"
                                            data-due="@task.DueDate?.ToString("yyyy-MM-dd")"
                                            data-status="@task.StatusId"
                                            data-bs-toggle="modal" data-bs-target="#editModal"
                                            title="Modify">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <form asp-action="Delete" asp-route-id="@task.Id" method="post" style="display:inline;"
                                    onsubmit="return confirm('Are you sure you want to delete this task?');">
                                        <input type="hidden" name="Id" value="@task.Id" />
                                        <button type="submit" class="btn btn-danger btn-sm" title="Delete">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>                
             </table> 
                    
        </div>
    </div>

@* Edit Info Popup *@
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="editForm" asp-action="Edit" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Task</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Id" id="edit-id" />

                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input name="Name" id="edit-name" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <input name="Description" id="edit-description" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Category</label>
                        <select name="CategoryId" id="edit-category" class="form-select">
                            @foreach (var category in ViewBag.Categories)
                            {
                                <option value="@category.CategoryId">@category.Name</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Start Date</label>
                        <input type="date" name="StartDate" id="edit-start" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Due Date</label>
                        <input type="date" name="DueDate" id="edit-due" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select name="StatusId" id="edit-status" class="form-select">
                            @foreach (var status in ViewBag.Status)
                            {
                                <option value="@status.StatusId">@status.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const editForm = document.getElementById("editForm");

        editForm.addEventListener("submit", function (e) {
            const start = new Date(document.getElementById("edit-start").value);
            const due = new Date(document.getElementById("edit-due").value);

            if (start > due) {
                e.preventDefault();
                alert("❗ Start Date must be before or equal to Due Date.");
            }
        });
    });

    // set value to the input for popup edit
    document.addEventListener("DOMContentLoaded", function () {
        const editButtons = document.querySelectorAll(".edit-btn");
        const modal = new bootstrap.Modal(document.getElementById("editModal"));

        editButtons.forEach(btn => {
            btn.addEventListener("click", function () {
                document.getElementById("edit-id").value = this.dataset.id;
                document.getElementById("edit-name").value = this.dataset.name;
                document.getElementById("edit-description").value = this.dataset.description;
                document.getElementById("edit-category").value = this.dataset.category;
                document.getElementById("edit-start").value = this.dataset.start;
                document.getElementById("edit-due").value = this.dataset.due;
                document.getElementById("edit-status").value = this.dataset.status;
            });
        });
    });

    // Mark that a sort was clicked
    document.querySelectorAll('.sort-link').forEach(link => {
        link.addEventListener('click', () => {
            sessionStorage.setItem('showSortToast', 'true');
        });
    });

    // Check if sort toast should display
    window.onload = function () {
        const shouldShowToast = sessionStorage.getItem('showSortToast') === 'true';
        const toastMsg = "@TempData["SortToast"]";

        if (shouldShowToast && toastMsg) {
            const toast = document.createElement("div");
            toast.innerText = "@TempData["SortToast"]";
            toast.style.position = "fixed";
            toast.style.bottom = "30px";
            toast.style.right = "30px";
            toast.style.padding = "15px 25px";
            toast.style.backgroundColor = "#7d2ae8";
            toast.style.color = "white";
            toast.style.borderRadius = "5px";
            toast.style.boxShadow = "0 0 10px rgba(0,0,0,0.3)";
            toast.style.zIndex = "9999";
            toast.style.opacity = "0.85";
            document.body.appendChild(toast);

            setTimeout(() => {
                toast.remove();
            }, 3000);

            // Clear the flag
            sessionStorage.removeItem('showSortToast');
        }
    };

    document.addEventListener("DOMContentLoaded", function () {
        const searchType = document.getElementById("searchType");
        const searchValue = document.getElementById("searchValue");

        function updateInputType() {
            const selected = searchType.value;
            if (selected === "name") {
                searchValue.type = "text";
                searchValue.placeholder = "Enter name";
            } else {
                searchValue.type = "date";
                searchValue.placeholder = "";
            }
        }

        searchType.addEventListener("change", updateInputType);
        updateInputType(); // run on page load
    });

    document.addEventListener("DOMContentLoaded", function () {
        const searchType = document.getElementById("searchType");
        const searchValue = document.getElementById("searchValue");

        function updateInputType() {
            const selected = searchType.value;
            if (selected === "name") {
                searchValue.type = "text";
                searchValue.placeholder = "Enter name";
            } else {
                searchValue.type = "date";
                searchValue.placeholder = "";
            }
        }

        searchType.addEventListener("change", updateInputType);
        updateInputType(); // Run on page load
    });
</script>